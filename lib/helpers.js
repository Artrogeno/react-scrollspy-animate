class Helpers {
  isEqualArray(a, b) {
    return a.length === b.length && a.every((item, index) => {
      return item === b[index];
    });
  }

  fillArray(array, val) {
    let newArray = [];
    for (let i = 0, max = array.length; i < max; i++) {
      newArray[i] = val;
    }
    return newArray;
  }

  throttle(fn, threshold = 100) {
    let last, timer;
    return () => {
      const now = +new Date();
      const timePassed = !!last && now < last + threshold;
      if (timePassed) {
        clearTimeout(timer);
        timer = setTimeout(() => {
          last = now;
          fn();
        }, threshold);
      } else {
        last = now;
        fn();
      }
    };
  }
}
export default new Helpers();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9saWIvaGVscGVycy5qcyJdLCJuYW1lcyI6WyJIZWxwZXJzIiwiaXNFcXVhbEFycmF5IiwiYSIsImIiLCJsZW5ndGgiLCJldmVyeSIsIml0ZW0iLCJpbmRleCIsImZpbGxBcnJheSIsImFycmF5IiwidmFsIiwibmV3QXJyYXkiLCJpIiwibWF4IiwidGhyb3R0bGUiLCJmbiIsInRocmVzaG9sZCIsImxhc3QiLCJ0aW1lciIsIm5vdyIsIkRhdGUiLCJ0aW1lUGFzc2VkIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTixDQUFjO0FBQ1pDLGVBQWFDLENBQWIsRUFBZ0JDLENBQWhCLEVBQW1CO0FBQ2pCLFdBQ0VELEVBQUVFLE1BQUYsS0FBYUQsRUFBRUMsTUFBZixJQUF5QkYsRUFBRUcsS0FBRixDQUFRLENBQUNDLElBQUQsRUFBT0MsS0FBUCxLQUFpQjtBQUNoRCxhQUFPRCxTQUFTSCxFQUFFSSxLQUFGLENBQWhCO0FBQ0QsS0FGd0IsQ0FEM0I7QUFLRDs7QUFFREMsWUFBV0MsS0FBWCxFQUFrQkMsR0FBbEIsRUFBdUI7QUFDckIsUUFBSUMsV0FBVyxFQUFmO0FBQ0EsU0FBSyxJQUFJQyxJQUFJLENBQVIsRUFBV0MsTUFBTUosTUFBTUwsTUFBNUIsRUFBb0NRLElBQUlDLEdBQXhDLEVBQTZDRCxHQUE3QyxFQUFrRDtBQUNoREQsZUFBU0MsQ0FBVCxJQUFjRixHQUFkO0FBQ0Q7QUFDRCxXQUFPQyxRQUFQO0FBQ0Q7O0FBRURHLFdBQVNDLEVBQVQsRUFBYUMsWUFBWSxHQUF6QixFQUE4QjtBQUM1QixRQUFJQyxJQUFKLEVBQVVDLEtBQVY7QUFDQSxXQUFPLE1BQU07QUFDWCxZQUFNQyxNQUFNLENBQUMsSUFBSUMsSUFBSixFQUFiO0FBQ0EsWUFBTUMsYUFBYSxDQUFDLENBQUNKLElBQUYsSUFBV0UsTUFBTUYsT0FBT0QsU0FBM0M7QUFDQSxVQUFJSyxVQUFKLEVBQWdCO0FBQ2RDLHFCQUFhSixLQUFiO0FBQ0FBLGdCQUFRSyxXQUFXLE1BQU07QUFDdkJOLGlCQUFPRSxHQUFQO0FBQ0FKO0FBQ0QsU0FITyxFQUdMQyxTQUhLLENBQVI7QUFJRCxPQU5ELE1BTU87QUFDTEMsZUFBT0UsR0FBUDtBQUNBSjtBQUNEO0FBQ0YsS0FiRDtBQWNEO0FBakNXO0FBbUNkLGVBQWUsSUFBSWYsT0FBSixFQUFmIiwiZmlsZSI6ImhlbHBlcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBIZWxwZXJzIHtcbiAgaXNFcXVhbEFycmF5KGEsIGIpIHtcbiAgICByZXR1cm4gKFxuICAgICAgYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuZXZlcnkoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiBpdGVtID09PSBiW2luZGV4XVxuICAgICAgfSlcbiAgICApXG4gIH1cblxuICBmaWxsQXJyYXkgKGFycmF5LCB2YWwpIHtcbiAgICBsZXQgbmV3QXJyYXkgPSBbXVxuICAgIGZvciAobGV0IGkgPSAwLCBtYXggPSBhcnJheS5sZW5ndGg7IGkgPCBtYXg7IGkrKykge1xuICAgICAgbmV3QXJyYXlbaV0gPSB2YWxcbiAgICB9XG4gICAgcmV0dXJuIG5ld0FycmF5XG4gIH1cblxuICB0aHJvdHRsZShmbiwgdGhyZXNob2xkID0gMTAwKSB7XG4gICAgbGV0IGxhc3QsIHRpbWVyXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNvbnN0IG5vdyA9ICtuZXcgRGF0ZSgpXG4gICAgICBjb25zdCB0aW1lUGFzc2VkID0gISFsYXN0ICYmIChub3cgPCBsYXN0ICsgdGhyZXNob2xkKVxuICAgICAgaWYgKHRpbWVQYXNzZWQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKVxuICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIGxhc3QgPSBub3dcbiAgICAgICAgICBmbigpXG4gICAgICAgIH0sIHRocmVzaG9sZClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxhc3QgPSBub3dcbiAgICAgICAgZm4oKVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgbmV3IEhlbHBlcnMoKVxuIl19